{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,KAAEC,EAAIC,WAAEC,EAAUC,UAAEC,EAASC,OAAEC,GAAW,CAC9CP,KAAMQ,SAASC,cAAc,SAC7BP,WAAYM,SAASC,cAAc,kBACnCL,UAAWI,SAASC,cAAc,iBAClCH,OAAQE,SAASC,cAAc,oBA4BjC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,GACFI,EAAQ,C,SAAEN,E,MAAUC,IAGtBM,EAAO,C,SAAEP,E,MAAUC,MAClBA,MAnCPX,EAAKmB,iBAAiB,UAAUC,IAC9BA,EAAMC,iBAIN,IAAIC,EAAgBC,OAAOrB,EAAWsB,OACtC,MAAMC,EAAeF,OAAOnB,EAAUoB,OACtCE,QAAQC,IAAIF,GACZC,QAAQC,IAAIL,GAEZ,IAAK,IAAIM,EAAQ,EAAGA,GAAStB,EAAOkB,MAAOI,IACzCF,QAAQC,IAAIC,GACZnB,EAAcmB,EAAON,GAClBO,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBd,EAAAiC,OAAOC,QAAQ,uBAAqBrB,QAAiBC,UAEtDqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBd,EAAAiC,OAAOG,QAAQ,sBAAoBvB,QAAeC,UAEtDW,GAAiBG,EAEnBzB,EAAKkC","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst { form, firstDelay, delayStep, amount } = {\n  form: document.querySelector('.form'),\n  firstDelay: document.querySelector('[name=\"delay\"]'),\n  delayStep: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n};\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  // const for get value\n\n  let getDelayValue = Number(firstDelay.value);\n  const getStepValue = Number(delayStep.value);\n  console.log(getStepValue);\n  console.log(getDelayValue);\n\n  for (let index = 1; index <= amount.value; index++) {\n    console.log(index);\n    createPromise(index, getDelayValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    getDelayValue += getStepValue;\n  }\n  form.reset();\n});\n\n// functions //\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n\n      reject({ position, delay });\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","form","$47d4ff9957288465$var$form","firstDelay","$47d4ff9957288465$var$firstDelay","delayStep","$47d4ff9957288465$var$delayStep","amount","$47d4ff9957288465$var$amount","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","getDelayValue","Number","value","getStepValue","console","log","index","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.2fdaf473.js.map"}